{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchchange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmBeA,EAhBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,mCAEA,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA2BH,EAA3B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,aCYFK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACA,cAAC,EAAD,CAEAR,GAAKO,EAAKP,GACTF,KAAOS,EAAKT,KACXC,MAAQQ,EAAKR,OAHTS,SCMKC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACK,uBACAA,UAAW,mCACXW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCAVI,EARA,SAACC,GACd,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCiDFC,G,wDA7CX,aAAc,IAAD,8BACT,gBAcRC,eAAiB,SAACC,GAEhB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAfpC,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJN,E,qDAQb,WAAqB,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBAS1C,WAAU,IAAD,EACyBC,KAAKN,MAA5BvB,EADF,EACEA,OAAQK,EADV,EACUA,YACTyB,EAAe9B,EAAO+B,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OAAKjC,EAAOmC,OAKZ,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,4BACG,cAAC,EAAD,CAAWU,aAAgBuB,KAAKX,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAWlB,OAAQ8B,SARhB,iD,GA7BDM,c,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,8BACG,cAAC,EAAD,QAKJC,SAASC,eAAe,W","file":"static/js/main.75390f18.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n         <img alt='Robot' src= {`https://robohash.org/${id}?200x200`}/>\r\n         <div>\r\n             <h2>{name}</h2>\r\n             <p>{email}</p>\r\n         </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Card;","import React  from 'react';\r\n//import {robots} from './robots';\r\nimport Card  from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n   return (\r\n    <div> \r\n    {\r\n     robots.map((user, i) => {\r\n    return ( \r\n    <Card \r\n    key= {i} \r\n    id= {user.id}\r\n     name= {user.name}\r\n      email= {user.email}/>\r\n    );\r\n     })\r\n\r\n     }\r\n </div>\r\n   );\r\n\r\n}\r\n\r\nexport default CardList;","import React  from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchchange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n             <input \r\n             className= 'pa3 ba b--green bg-lightest-blue'\r\n             type=\"search\"\r\n             placeholder=\"Search Robots\"\r\n             onChange = {searchchange}\r\n               />\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n      <div style={{overflow: 'scroll', border: '5px solid black', height: '500px'}}>\r\n          {props.children}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n//import {robots} from './robots';\r\nimport CardList from '../component/CardList'\r\nimport SearchBox from '../component/SearchBox';\r\nimport Scroll from '../component/Scroll';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n          robots: [],\r\n          searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n      \r\n    }\r\n\r\nonSearchChange = (event) => {\r\n    \r\n  this.setState({ searchfield: event.target.value})\r\n}\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filterRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());     \r\n        })\r\n\r\n        if (!robots.length){\r\n            return <h1> Loading...</h1>\r\n        }\r\n        else{\r\n    return (\r\n        <div className='tc'>\r\n         <h1 className='f1'> ROBOTFRIENDS </h1>\r\n            <SearchBox searchchange = {this.onSearchChange} />\r\n            <Scroll>\r\n                <CardList  robots={filterRobots}/>\r\n            </Scroll>\r\n            \r\n        </div>\r\n        \r\n    );\r\n        }\r\n}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './containers/App';\nimport index from './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n   <div >   \n      <App />\n   </div>\n    \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}